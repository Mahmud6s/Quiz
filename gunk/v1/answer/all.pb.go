// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: quiz/gunk/v1/answer/all.proto

package answerpb

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Answer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         int32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UserquizID int32 `protobuf:"varint,2,opt,name=UserquizID,proto3" json:"UserquizID,omitempty"`
	QuestionID int32 `protobuf:"varint,3,opt,name=QuestionID,proto3" json:"QuestionID,omitempty"`
	OptionID   int32 `protobuf:"varint,4,opt,name=OptionID,proto3" json:"OptionID,omitempty"`
	IsCorrect  bool  `protobuf:"varint,5,opt,name=IsCorrect,proto3" json:"IsCorrect,omitempty"`
}

func (x *Answer) Reset() {
	*x = Answer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quiz_gunk_v1_answer_all_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Answer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Answer) ProtoMessage() {}

func (x *Answer) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_gunk_v1_answer_all_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Answer.ProtoReflect.Descriptor instead.
func (*Answer) Descriptor() ([]byte, []int) {
	return file_quiz_gunk_v1_answer_all_proto_rawDescGZIP(), []int{0}
}

func (x *Answer) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Answer) GetUserquizID() int32 {
	if x != nil {
		return x.UserquizID
	}
	return 0
}

func (x *Answer) GetQuestionID() int32 {
	if x != nil {
		return x.QuestionID
	}
	return 0
}

func (x *Answer) GetOptionID() int32 {
	if x != nil {
		return x.OptionID
	}
	return 0
}

func (x *Answer) GetIsCorrect() bool {
	if x != nil {
		return x.IsCorrect
	}
	return false
}

type AnswerList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         int32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	FirstName  string `protobuf:"bytes,2,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName   string `protobuf:"bytes,3,opt,name=LastName,proto3" json:"LastName,omitempty"`
	Username   string `protobuf:"bytes,4,opt,name=Username,proto3" json:"Username,omitempty"`
	Title      string `protobuf:"bytes,5,opt,name=Title,proto3" json:"Title,omitempty"`
	OptionName string `protobuf:"bytes,6,opt,name=OptionName,proto3" json:"OptionName,omitempty"`
	IsCorrect  bool   `protobuf:"varint,7,opt,name=IsCorrect,proto3" json:"IsCorrect,omitempty"`
}

func (x *AnswerList) Reset() {
	*x = AnswerList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quiz_gunk_v1_answer_all_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerList) ProtoMessage() {}

func (x *AnswerList) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_gunk_v1_answer_all_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerList.ProtoReflect.Descriptor instead.
func (*AnswerList) Descriptor() ([]byte, []int) {
	return file_quiz_gunk_v1_answer_all_proto_rawDescGZIP(), []int{1}
}

func (x *AnswerList) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AnswerList) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *AnswerList) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *AnswerList) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AnswerList) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AnswerList) GetOptionName() string {
	if x != nil {
		return x.OptionName
	}
	return ""
}

func (x *AnswerList) GetIsCorrect() bool {
	if x != nil {
		return x.IsCorrect
	}
	return false
}

type AnswerListFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalAnswer []*AnswerList `protobuf:"bytes,1,rep,name=TotalAnswer,proto3" json:"TotalAnswer,omitempty"`
	SearchTerm  string        `protobuf:"bytes,2,opt,name=SearchTerm,proto3" json:"SearchTerm,omitempty"`
}

func (x *AnswerListFilter) Reset() {
	*x = AnswerListFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quiz_gunk_v1_answer_all_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerListFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerListFilter) ProtoMessage() {}

func (x *AnswerListFilter) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_gunk_v1_answer_all_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerListFilter.ProtoReflect.Descriptor instead.
func (*AnswerListFilter) Descriptor() ([]byte, []int) {
	return file_quiz_gunk_v1_answer_all_proto_rawDescGZIP(), []int{2}
}

func (x *AnswerListFilter) GetTotalAnswer() []*AnswerList {
	if x != nil {
		return x.TotalAnswer
	}
	return nil
}

func (x *AnswerListFilter) GetSearchTerm() string {
	if x != nil {
		return x.SearchTerm
	}
	return ""
}

type AnswerListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchTerm string `protobuf:"bytes,1,opt,name=SearchTerm,proto3" json:"SearchTerm,omitempty"`
}

func (x *AnswerListRequest) Reset() {
	*x = AnswerListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quiz_gunk_v1_answer_all_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerListRequest) ProtoMessage() {}

func (x *AnswerListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_gunk_v1_answer_all_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerListRequest.ProtoReflect.Descriptor instead.
func (*AnswerListRequest) Descriptor() ([]byte, []int) {
	return file_quiz_gunk_v1_answer_all_proto_rawDescGZIP(), []int{3}
}

func (x *AnswerListRequest) GetSearchTerm() string {
	if x != nil {
		return x.SearchTerm
	}
	return ""
}

type AnswerListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnswerListFilter *AnswerListFilter `protobuf:"bytes,1,opt,name=AnswerListFilter,proto3" json:"AnswerListFilter,omitempty"`
}

func (x *AnswerListResponse) Reset() {
	*x = AnswerListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quiz_gunk_v1_answer_all_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerListResponse) ProtoMessage() {}

func (x *AnswerListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_gunk_v1_answer_all_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerListResponse.ProtoReflect.Descriptor instead.
func (*AnswerListResponse) Descriptor() ([]byte, []int) {
	return file_quiz_gunk_v1_answer_all_proto_rawDescGZIP(), []int{4}
}

func (x *AnswerListResponse) GetAnswerListFilter() *AnswerListFilter {
	if x != nil {
		return x.AnswerListFilter
	}
	return nil
}

type CreateAnswerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         int32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UserquizID int32 `protobuf:"varint,2,opt,name=UserquizID,proto3" json:"UserquizID,omitempty"`
	QuestionID int32 `protobuf:"varint,3,opt,name=QuestionID,proto3" json:"QuestionID,omitempty"`
	OptionID   int32 `protobuf:"varint,4,opt,name=OptionID,proto3" json:"OptionID,omitempty"`
}

func (x *CreateAnswerRequest) Reset() {
	*x = CreateAnswerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quiz_gunk_v1_answer_all_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAnswerRequest) ProtoMessage() {}

func (x *CreateAnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_gunk_v1_answer_all_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAnswerRequest.ProtoReflect.Descriptor instead.
func (*CreateAnswerRequest) Descriptor() ([]byte, []int) {
	return file_quiz_gunk_v1_answer_all_proto_rawDescGZIP(), []int{5}
}

func (x *CreateAnswerRequest) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *CreateAnswerRequest) GetUserquizID() int32 {
	if x != nil {
		return x.UserquizID
	}
	return 0
}

func (x *CreateAnswerRequest) GetQuestionID() int32 {
	if x != nil {
		return x.QuestionID
	}
	return 0
}

func (x *CreateAnswerRequest) GetOptionID() int32 {
	if x != nil {
		return x.OptionID
	}
	return 0
}

type CreateAnswerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answer *Answer `protobuf:"bytes,1,opt,name=Answer,proto3" json:"Answer,omitempty"`
}

func (x *CreateAnswerResponse) Reset() {
	*x = CreateAnswerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quiz_gunk_v1_answer_all_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAnswerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAnswerResponse) ProtoMessage() {}

func (x *CreateAnswerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_gunk_v1_answer_all_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAnswerResponse.ProtoReflect.Descriptor instead.
func (*CreateAnswerResponse) Descriptor() ([]byte, []int) {
	return file_quiz_gunk_v1_answer_all_proto_rawDescGZIP(), []int{6}
}

func (x *CreateAnswerResponse) GetAnswer() *Answer {
	if x != nil {
		return x.Answer
	}
	return nil
}

type EditAnswerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *EditAnswerRequest) Reset() {
	*x = EditAnswerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quiz_gunk_v1_answer_all_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditAnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditAnswerRequest) ProtoMessage() {}

func (x *EditAnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_gunk_v1_answer_all_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditAnswerRequest.ProtoReflect.Descriptor instead.
func (*EditAnswerRequest) Descriptor() ([]byte, []int) {
	return file_quiz_gunk_v1_answer_all_proto_rawDescGZIP(), []int{7}
}

func (x *EditAnswerRequest) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type EditAnswerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answer *Answer `protobuf:"bytes,1,opt,name=Answer,proto3" json:"Answer,omitempty"`
}

func (x *EditAnswerResponse) Reset() {
	*x = EditAnswerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quiz_gunk_v1_answer_all_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditAnswerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditAnswerResponse) ProtoMessage() {}

func (x *EditAnswerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_gunk_v1_answer_all_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditAnswerResponse.ProtoReflect.Descriptor instead.
func (*EditAnswerResponse) Descriptor() ([]byte, []int) {
	return file_quiz_gunk_v1_answer_all_proto_rawDescGZIP(), []int{8}
}

func (x *EditAnswerResponse) GetAnswer() *Answer {
	if x != nil {
		return x.Answer
	}
	return nil
}

type UpdateAnswerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         int32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UserquizID int32 `protobuf:"varint,2,opt,name=UserquizID,proto3" json:"UserquizID,omitempty"`
	QuestionID int32 `protobuf:"varint,3,opt,name=QuestionID,proto3" json:"QuestionID,omitempty"`
	OptionID   int32 `protobuf:"varint,4,opt,name=OptionID,proto3" json:"OptionID,omitempty"`
	IsCorrect  bool  `protobuf:"varint,5,opt,name=IsCorrect,proto3" json:"IsCorrect,omitempty"`
}

func (x *UpdateAnswerRequest) Reset() {
	*x = UpdateAnswerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quiz_gunk_v1_answer_all_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAnswerRequest) ProtoMessage() {}

func (x *UpdateAnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_gunk_v1_answer_all_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAnswerRequest.ProtoReflect.Descriptor instead.
func (*UpdateAnswerRequest) Descriptor() ([]byte, []int) {
	return file_quiz_gunk_v1_answer_all_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateAnswerRequest) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateAnswerRequest) GetUserquizID() int32 {
	if x != nil {
		return x.UserquizID
	}
	return 0
}

func (x *UpdateAnswerRequest) GetQuestionID() int32 {
	if x != nil {
		return x.QuestionID
	}
	return 0
}

func (x *UpdateAnswerRequest) GetOptionID() int32 {
	if x != nil {
		return x.OptionID
	}
	return 0
}

func (x *UpdateAnswerRequest) GetIsCorrect() bool {
	if x != nil {
		return x.IsCorrect
	}
	return false
}

type UpdateAnswerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAnswerResponse) Reset() {
	*x = UpdateAnswerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quiz_gunk_v1_answer_all_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAnswerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAnswerResponse) ProtoMessage() {}

func (x *UpdateAnswerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_gunk_v1_answer_all_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAnswerResponse.ProtoReflect.Descriptor instead.
func (*UpdateAnswerResponse) Descriptor() ([]byte, []int) {
	return file_quiz_gunk_v1_answer_all_proto_rawDescGZIP(), []int{10}
}

type DeleteAnswerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteAnswerRequest) Reset() {
	*x = DeleteAnswerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quiz_gunk_v1_answer_all_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAnswerRequest) ProtoMessage() {}

func (x *DeleteAnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_gunk_v1_answer_all_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAnswerRequest.ProtoReflect.Descriptor instead.
func (*DeleteAnswerRequest) Descriptor() ([]byte, []int) {
	return file_quiz_gunk_v1_answer_all_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteAnswerRequest) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type DeleteAnswerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAnswerResponse) Reset() {
	*x = DeleteAnswerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quiz_gunk_v1_answer_all_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAnswerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAnswerResponse) ProtoMessage() {}

func (x *DeleteAnswerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_gunk_v1_answer_all_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAnswerResponse.ProtoReflect.Descriptor instead.
func (*DeleteAnswerResponse) Descriptor() ([]byte, []int) {
	return file_quiz_gunk_v1_answer_all_proto_rawDescGZIP(), []int{12}
}

var File_quiz_gunk_v1_answer_all_proto protoreflect.FileDescriptor

var file_quiz_gunk_v1_answer_all_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x71, 0x75, 0x69, 0x7a, 0x2f, 0x67, 0x75, 0x6e, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x2f, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x70, 0x62, 0x22, 0xa5, 0x01, 0x0a, 0x06, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x1e, 0x0a, 0x0a,
	0x55, 0x73, 0x65, 0x72, 0x71, 0x75, 0x69, 0x7a, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x1e, 0x0a, 0x0a,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x1c, 0x0a, 0x08,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a,
	0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x1d, 0x0a, 0x09, 0x49, 0x73,
	0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x42, 0x0a, 0x08,
	0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18,
	0x00, 0x22, 0xe1, 0x01, 0x0a, 0x0a, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0x08, 0x00,
	0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x1d, 0x0a, 0x09, 0x46, 0x69, 0x72, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18,
	0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x1c, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28,
	0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x1c, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30,
	0x00, 0x50, 0x00, 0x12, 0x19, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x1e,
	0x0a, 0x0a, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x1d,
	0x0a, 0x09, 0x49, 0x73, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x3a, 0x06, 0x08,
	0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0x71, 0x0a, 0x10, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x0b, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00,
	0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00,
	0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0x3b, 0x0a, 0x11, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x3a, 0x06, 0x08,
	0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0x5e, 0x0a, 0x12, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x10, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x70, 0x62,
	0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x3a, 0x06, 0x08,
	0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0x93, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28,
	0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x71, 0x75, 0x69,
	0x7a, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28,
	0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x1e, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28,
	0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x1c, 0x0a, 0x08, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30,
	0x00, 0x50, 0x00, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0x4c, 0x0a, 0x14, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50,
	0x00, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0x33, 0x0a, 0x11, 0x45, 0x64, 0x69,
	0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00,
	0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0x4a,
	0x0a, 0x12, 0x45, 0x64, 0x69, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x70, 0x62, 0x2e,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00,
	0x50, 0x00, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0xb2, 0x01, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a,
	0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x73,
	0x65, 0x72, 0x71, 0x75, 0x69, 0x7a, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a,
	0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x1e, 0x0a, 0x0a, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a,
	0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x1c, 0x0a, 0x08, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0x08, 0x00,
	0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x1d, 0x0a, 0x09, 0x49, 0x73, 0x43, 0x6f,
	0x72, 0x72, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x42, 0x0a, 0x08, 0x00, 0x18,
	0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22,
	0x1e, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22,
	0x35, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x3a, 0x06,
	0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0x1e, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x06,
	0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x32, 0xcf, 0x03, 0x0a, 0x0d, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0x88, 0x02, 0x00, 0x90, 0x02, 0x00, 0x28,
	0x00, 0x30, 0x00, 0x12, 0x53, 0x0a, 0x0a, 0x45, 0x64, 0x69, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x12, 0x1b, 0x2e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x45, 0x64, 0x69,
	0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0x88, 0x02,
	0x00, 0x90, 0x02, 0x00, 0x28, 0x00, 0x30, 0x00, 0x12, 0x59, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0x88, 0x02, 0x00, 0x90, 0x02, 0x00, 0x28,
	0x00, 0x30, 0x00, 0x12, 0x59, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x06, 0x88, 0x02, 0x00, 0x90, 0x02, 0x00, 0x28, 0x00, 0x30, 0x00, 0x12, 0x53,
	0x0a, 0x0a, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0x88, 0x02, 0x00, 0x90, 0x02, 0x00, 0x28,
	0x00, 0x30, 0x00, 0x1a, 0x03, 0x88, 0x02, 0x00, 0x42, 0x37, 0x48, 0x01, 0x50, 0x00, 0x5a, 0x1c,
	0x71, 0x75, 0x69, 0x7a, 0x2f, 0x67, 0x75, 0x6e, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x3b, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x70, 0x62, 0x80, 0x01, 0x00, 0x88,
	0x01, 0x00, 0x90, 0x01, 0x00, 0xb8, 0x01, 0x00, 0xd8, 0x01, 0x00, 0xf8, 0x01, 0x01, 0xd0, 0x02,
	0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_quiz_gunk_v1_answer_all_proto_rawDescOnce sync.Once
	file_quiz_gunk_v1_answer_all_proto_rawDescData = file_quiz_gunk_v1_answer_all_proto_rawDesc
)

func file_quiz_gunk_v1_answer_all_proto_rawDescGZIP() []byte {
	file_quiz_gunk_v1_answer_all_proto_rawDescOnce.Do(func() {
		file_quiz_gunk_v1_answer_all_proto_rawDescData = protoimpl.X.CompressGZIP(file_quiz_gunk_v1_answer_all_proto_rawDescData)
	})
	return file_quiz_gunk_v1_answer_all_proto_rawDescData
}

var (
	file_quiz_gunk_v1_answer_all_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
	file_quiz_gunk_v1_answer_all_proto_goTypes  = []interface{}{
		(*Answer)(nil),               // 0: answerpb.Answer
		(*AnswerList)(nil),           // 1: answerpb.AnswerList
		(*AnswerListFilter)(nil),     // 2: answerpb.AnswerListFilter
		(*AnswerListRequest)(nil),    // 3: answerpb.AnswerListRequest
		(*AnswerListResponse)(nil),   // 4: answerpb.AnswerListResponse
		(*CreateAnswerRequest)(nil),  // 5: answerpb.CreateAnswerRequest
		(*CreateAnswerResponse)(nil), // 6: answerpb.CreateAnswerResponse
		(*EditAnswerRequest)(nil),    // 7: answerpb.EditAnswerRequest
		(*EditAnswerResponse)(nil),   // 8: answerpb.EditAnswerResponse
		(*UpdateAnswerRequest)(nil),  // 9: answerpb.UpdateAnswerRequest
		(*UpdateAnswerResponse)(nil), // 10: answerpb.UpdateAnswerResponse
		(*DeleteAnswerRequest)(nil),  // 11: answerpb.DeleteAnswerRequest
		(*DeleteAnswerResponse)(nil), // 12: answerpb.DeleteAnswerResponse
	}
)

var file_quiz_gunk_v1_answer_all_proto_depIdxs = []int32{
	1,  // 0: answerpb.AnswerListFilter.TotalAnswer:type_name -> answerpb.AnswerList
	2,  // 1: answerpb.AnswerListResponse.AnswerListFilter:type_name -> answerpb.AnswerListFilter
	0,  // 2: answerpb.CreateAnswerResponse.Answer:type_name -> answerpb.Answer
	0,  // 3: answerpb.EditAnswerResponse.Answer:type_name -> answerpb.Answer
	5,  // 4: answerpb.AnswerService.CreateAnswer:input_type -> answerpb.CreateAnswerRequest
	7,  // 5: answerpb.AnswerService.EditAnswer:input_type -> answerpb.EditAnswerRequest
	9,  // 6: answerpb.AnswerService.UpdateAnswer:input_type -> answerpb.UpdateAnswerRequest
	11, // 7: answerpb.AnswerService.DeleteAnswer:input_type -> answerpb.DeleteAnswerRequest
	3,  // 8: answerpb.AnswerService.AnswerList:input_type -> answerpb.AnswerListRequest
	6,  // 9: answerpb.AnswerService.CreateAnswer:output_type -> answerpb.CreateAnswerResponse
	8,  // 10: answerpb.AnswerService.EditAnswer:output_type -> answerpb.EditAnswerResponse
	10, // 11: answerpb.AnswerService.UpdateAnswer:output_type -> answerpb.UpdateAnswerResponse
	12, // 12: answerpb.AnswerService.DeleteAnswer:output_type -> answerpb.DeleteAnswerResponse
	4,  // 13: answerpb.AnswerService.AnswerList:output_type -> answerpb.AnswerListResponse
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_quiz_gunk_v1_answer_all_proto_init() }
func file_quiz_gunk_v1_answer_all_proto_init() {
	if File_quiz_gunk_v1_answer_all_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_quiz_gunk_v1_answer_all_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Answer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quiz_gunk_v1_answer_all_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quiz_gunk_v1_answer_all_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerListFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quiz_gunk_v1_answer_all_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quiz_gunk_v1_answer_all_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quiz_gunk_v1_answer_all_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAnswerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quiz_gunk_v1_answer_all_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAnswerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quiz_gunk_v1_answer_all_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditAnswerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quiz_gunk_v1_answer_all_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditAnswerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quiz_gunk_v1_answer_all_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAnswerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quiz_gunk_v1_answer_all_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAnswerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quiz_gunk_v1_answer_all_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAnswerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quiz_gunk_v1_answer_all_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAnswerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_quiz_gunk_v1_answer_all_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_quiz_gunk_v1_answer_all_proto_goTypes,
		DependencyIndexes: file_quiz_gunk_v1_answer_all_proto_depIdxs,
		MessageInfos:      file_quiz_gunk_v1_answer_all_proto_msgTypes,
	}.Build()
	File_quiz_gunk_v1_answer_all_proto = out.File
	file_quiz_gunk_v1_answer_all_proto_rawDesc = nil
	file_quiz_gunk_v1_answer_all_proto_goTypes = nil
	file_quiz_gunk_v1_answer_all_proto_depIdxs = nil
}
